[versions]
kotlin = "2.1.10"
kotlinxSerializationJson = "1.8.0"
kotlinxCoroutines = "1.10.1"
junitJupiterParams = "5.12.0"
mavenPublish = "0.30.0"
mockitoKotlin = "5.4.0"
okhttp = "4.12.0"
retrofit = "2.11.0"
retrofitAdaptersResult = "1.0.13"
retrofitConverterKotlinxSerialization = "2.11.0"
truth = "1.4.4"
turbine = "1.2.0"
versions = "0.52.0"

[libraries]
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinxCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitAdaptersResult = { module = "com.github.skydoves:retrofit-adapters-result", version.ref = "retrofitAdaptersResult" }
retrofitConverterKotlinxSerialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofitConverterKotlinxSerialization" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttpMockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
okhttpLoggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

junitJupiterParams = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junitJupiterParams" }
kotlinxCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[bundles]
kotlinxEcosystem = ["kotlinxSerialization", "kotlinxCoroutines"]
okttpEcosystem = ["okhttp", "okhttpMockwebserver", "okhttpLoggingInterceptor"]
retrofitEcosystem = ["retrofit", "retrofitAdaptersResult", "retrofitConverterKotlinxSerialization"]
testEcosystem = ["junitJupiterParams", "kotlinxCoroutinesTest", "mockitoKotlin", "truth", "turbine"]

[plugins]
kotlinPluginSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
